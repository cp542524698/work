查找镜像：docker search {image_name}
下载镜像：docker pull  {image_name}, 
          docker pull dl.dockerpool.com:5000/ubuntu:12.04     #指定下载源
列出本地镜像：docker image list
向registry.hub.docker.com提交自己的image：
    docker commit -m "{msg}" -a "Docker Newbee"  0b2616b0e5a8 ouruser/sinatra:v2
自己定制image与team共享，需要编写dockerfile来生成image；参见：https://yeasy.gitbooks.io/docker_practice/content/image/create.html
删除本地镜像：docker rmi {img_id}

docker运行容器：
  新建并启动容器：docker run ...
  直接启动容器：docker start ...
进入容器：[docker attach 命令或 nsenter 工具等。]
  attach命令：【一般不用】
    docker attack attach {container_name}
    使用 attach 命令有时候并不方便。当多个窗口同时 attach 到同一个容器的时候，所有窗口都会同步显示。
    当某个窗口因命令阻塞时,其他窗口也无法执行操作了
  nsenter工具：
    编译、安装：
      $ cd /tmp; curl https://www.kernel.org/pub/linux/utils/util-linux/v2.24/util-linux-2.24.tar.gz | tar -zxf-; cd util-linux-2.24;
      $ ./configure --without-ncurses
      $ make nsenter && sudo cp nsenter /usr/local/bin
    nsenter 可以访问另一个进程的名字空间。nsenter 要正常工作需要有 root 权限
    为了连接到进程，首先需要找到进程id即pid：
      docker inspect --format "{{ .State.Pid }}" {container_id}
    通过该pid连接容器：参数参见nsenter --help
       nsenter --target {pid} --mount --uts --ipc --net --pid
导出容器：
  docker export {container_id} > {my_image_name}    
删除停止运行的容器：
  docker rm {container_id}

Docker 数据管理主要为一下两种:
  数据卷（Data volumes）
  数据卷容器（Data volume containers）   
挂载一个主机目录作为数据卷：
  sudo docker run -d -P --name web -v /node:/container {image_name}  python app.py
    -v  /node:/container:ro   #只读挂载
数据卷容器：其实就是一个正常的容器，专门用来提供数据卷供其它容器挂载的。
  1、首先参见一个容器，命名为db：
    sudo docker run -d  -v /dbdata --name db {image_name}
  2、在其他容器中使用 --volumes-from 来挂载 db 容器中的数据卷：
    docker run -d --volumes-from db --name db2 {image_name}
数据卷容器的备份、恢复：
   docker run --volumes-from db -v $(pwd):/backup  {image_name}  tar cvf /backup/backup.tar /db
   


